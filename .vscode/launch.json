{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Go: debug cli",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/go/cmd/cli",
            "env": {
                "CGO_CFLAGS_ALLOW": "-D_FORTIFY_SOURCE=0",
                "CGO_CFLAGS": "-D_FORTIFY_SOURCE=0",
                "CGO_LDFLAGS": "-Wl,-z,relro,-z,now",
                "LD_LIBRARY_PATH": "${workspaceFolder}/go/lib:${env:LD_LIBRARY_PATH}"
            },
        },
        {
            "name": "Rust: attach",
            "type": "lldb",
            "request": "attach",
            "pid": "${command:pickMyProcess}"
        },
        {
            "name": "Rust: debug binary",
            "type": "lldb",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "terminal": "integrated",
            "cargo": {
                "args": [
                    "build",
                    "--bin=openiap",
                    "--package=openiap"
                ],
                "filter": {
                    "name": "openiap",
                    "kind": "bin"
                }
            },
            "args": [],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Rust: debug bootstrap",
            "type": "lldb",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "terminal": "integrated",
            "cargo": {
                "args": [
                    "build",
                    "--bin=openiap-bootstrap",
                    "--package=openiap-bootstrap"
                ],
                "filter": {
                    "name": "openiap-bootstrap",
                    "kind": "bin"
                }
            },
            "args": [],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "C: debug cli",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/c/client_cli",
            "args": [],
            "envFile": "${workspaceFolder}/.env",
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/c",
            "environment": [
                {
                    "name": "PATH",
                    "value": "${env:PATH}"
                }
            ],
            "miDebuggerPath": "${workspaceFolder}/.vscode/gdb-wrapper.sh",
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "C#: run Program",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "Build .NET",
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "cwd": "${workspaceFolder}/dotnet",
            "program": "${workspaceFolder}/dotnet/bin/Debug/net9.0/openiap.dll",
            "logging": {
                "diagnosticsLog": {
                    "protocolMessages": true
                }
            }
        },
        {
            "name": "Java: run cli.java",
            "type": "java",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "mainClass": "io.openiap.clienttestcli",
            "projectName": "client"
        },
        {
            "name": "Python: debug test.py",
            "type": "debugpy",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/python/test.py",
            "console": "integratedTerminal"
        },
        {
            "name": "Python: debug cli.py",
            "type": "debugpy",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/python/cli.py",
            "console": "integratedTerminal"
        },
        {
            "name": "Node: debug test.js",
            "type": "node",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "args": [
                "--trace-warnings"
            ],
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/node/test.js"
        },
        {
            "name": "Node: debug cli.js",
            "type": "node",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "args": [
                "--trace-warnings"
            ],
            "console": "integratedTerminal",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/node/cli.js"
        },
        {
            "name": "PHP: debug test.php",
            "type": "php",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/php/examples/test.php",
            "cwd": "${fileDirname}",
            "port": 0,
            "runtimeArgs": [
                "-dxdebug.start_with_request=yes"
            ],
            "env": {
                "XDEBUG_MODE": "debug,develop",
                "XDEBUG_CONFIG": "client_port=${port}"
            }
        },
        {
            "name": "PHP: debug cli.php",
            "type": "php",
            "request": "launch",
            "envFile": "${workspaceFolder}/.env",
            "program": "${workspaceFolder}/php/examples/cli.php",
            "cwd": "${fileDirname}",
            "port": 0,
            "runtimeArgs": [
                "-dxdebug.start_with_request=yes"
            ],
            "env": {
                "XDEBUG_MODE": "debug,develop",
                "XDEBUG_CONFIG": "client_port=${port}"
            }
        },
    ]
}